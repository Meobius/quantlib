
/*
 Copyright (C) 2000-2003 RiskMap srl

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software developed by the QuantLib Group; you can
 redistribute it and/or modify it under the terms of the QuantLib License;
 either version 1.0, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 QuantLib License for more details.

 You should have received a copy of the QuantLib License along with this
 program; if not, please email quantlib-dev@lists.sf.net

 The QuantLib License is also available at http://quantlib.org/license.html
 The members of the QuantLib Group are listed in the QuantLib License
*/

/*! \page install Installation

    \section linux Linux/Unix/Mac OS X/Cygwin
    A tarball of the source distribution is available from <br>
    http://quantlib.org/download.html

    After uncompressing the sources:
    -# `cd' to the %QuantLib directory and type `./configure' to
       configure the package for your system; see the \ref config section
       for configuration options.
    -# Type `make' to compile the package.
    -# Type `make install' to install the library. This might require
       administrative privileges.

    \section win32 Win32
    An installer for the source distribution is available at <br>
    http://quantlib.org/download.html

    Before compiling the library, you might want to edit the file
    "ql/userconfig.hpp"; see the \ref config section for details.

    Visual C++ 6.0/7.1 projects files are supplied for building the library.

    Dev-C++ project files are provided in order to make easier the usage of
    Mingw/GCC under Win32.

    If you use Borland command line compiler (5.5.1) the make options are:
    -D_DEBUG (debug), -D_RTLDLL (dynamic linking of runtime library),
    -D_MT__ (multi-thread) as in:

    make all

    make -D_DEBUG all

    make -D__MT__ -D_RTLDLL -D_DEBUG all

    or any other combination of options.

*/
