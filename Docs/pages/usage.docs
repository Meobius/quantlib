
/*
 Copyright (C) 2002, 2003 Ferdinando Ametrano
 Copyright (C) 2001, 2002, 2003 Sadruddin Rejeb

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software developed by the QuantLib Group; you can
 redistribute it and/or modify it under the terms of the QuantLib License;
 either version 1.0, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 QuantLib License for more details.

 You should have received a copy of the QuantLib License along with this
 program; if not, please email quantlib-dev@lists.sf.net

 The QuantLib License is also available at http://quantlib.org/license.html
 The members of the QuantLib Group are listed in the QuantLib License
*/

/*! \page usage Usage
    To use %QuantLib classes in your own code just add
    \code
    #include <ql/quantlib.hpp>
    \endcode
    at the beginning of your source/header files.

    Under the Examples folder you can find examples of %QuantLib usage,
    including makefiles for gcc, Borland Free compiler,
    and Microsoft Visual C++. For the latter project files are also available.


    \section microsoftvisual Microsoft Visual C++
    A few suggestions for Visual C++ users wanting to use %QuantLib into their
    own application:
    -# As long as you include ql/quantlib.hpp, you won't have to explicitly
    link your application to QuantLib library. This is
    automatically done by quantlib.hpp using the pragma statement:
    \code
    #ifdef _DLL
        #ifdef _DEBUG
            #pragma comment(lib,"QuantLib_MTDLL_d.lib")
        #else
            #pragma comment(lib,"QuantLib_MTDLL.lib")
        #endif
    #else
        #ifdef _DEBUG
            #pragma comment(lib,"QuantLib_d.lib")
        #else
            #pragma comment(lib,"QuantLib.lib")
        #endif
    #endif
    \endcode
    -# Your main() must be compiled with the same options that were used in
    compiling the %QuantLib library - namely, you'll have to set the run-time
    library to "(Debug) Multithreaded (DLL)".
    For single-threaded version of QuantLib one must change the settings under
    project settings, "C/C++" tab, "Code Generation", and then re-build the
    library with the new settings.
    You'll have to check the "Use RTTI" option under the "C++ Language"
    category, too. Finally, you have to define NOMINMAX
    -# To create your own project, add it to a new or existing Workspace.
    Under File | New | Projects select "Win32 Console Application" (or
    equivalent).
    Under Project | Settings select your project. Select settings for: "All
    configuration".
    On the "C/C++" tab select "Preprocessor" and under "Additional include
    directory" add "\$(QL_DIR)". This will add your current %QuantLib
    installation directory to the include path.
    On the "Link" tab select "Input" and under "Additional library path" add
    "\$(QL_DIR)\lib\Win32\VisualStudio\". This will add your current %QuantLib
    installation directory to the library path.
    -# To compile in "Win32 Debug" configuration you will need the %QuantLib
    debug libraries, available for download from
    http://quantlib.org/download.html

*/

